// import React, { useEffect, useState } from 'react'
// import { useSelector } from 'react-redux';
// import { toast } from 'react-toastify'
// import './Chat.css';
// import {format} from 'timeago.js'
// function Chat() {
//     // const [chatdata, setchatData] = useState([])
//     const { currentUser } = useSelector(state => state.user)
//     const [agentId, setAgentId] = useState('');
//     // console.log("agentId", agentId)
//     const [chat, setChat] = useState([]);
//     // console.log("chat", chat)
//     const userId = currentUser?.data?._id;
//     // console.log("userId", userId)
//     // console.log(chatdata)
//     const [allchats, setAllchats] = useState([]);

//     const [signleData, setSingleData] = useState([]);

//     // console.log("signleData", signleData)

//     console.log("allchats", allchats)

//     const [chats, setChats] = useState(null);


//     // const [message, setMessage] = useState(null)
    

//     const handleStartChat = async (e) => {
//         e.preventDefault();
//         try {
//             const res = await fetch(`/api/chat/chats`, {
//                 method: 'POST',
//                 headers: {
//                     'Content-Type': 'application/json',
//                 },
//                 body: JSON.stringify({ userId: userId, agentId: agentId })
//             });
//             const result = await res.json();

//             if (!res.ok) {
//                 toast.error("There Was an error fetching")
//             }
//             setChat(result);
//         } catch (error) {
//             console.error('Error starting chat', error);
//         }
//     };

//     useEffect(() => {
//         const handleAllchats = async () => {
//             try {
//                 const res = await fetch(`/api/chat/chats/Allchats`)

//                 const data = await res.json()
//                 if (!res.ok) {
//                     toast.error("There Was an error fetching all chats")
//                 }
//                 setAllchats(data)
//             } catch (error) {
//                 console.log(error)
//             }
//         }
//         handleAllchats()


//     }, []);

//     const handleChange = (e) => {
//         e.preventDefault();
//         setAgentId(e.target.value)
//     }


//         const HandleMessages = async(ChatId, agent) =>{
//             try {
//              const res = await fetch(`/api/message/messages/${ChatId}/CreateMessage`,{
//                 method: 'POST',
//                 headers: 
//                 {'Content-Type': 'application/json'},
//                 body: JSON.stringify()
//              })
             
//             } catch (error) {
                
//             }
//         }


//     const handleOpenChat = async (ChatId, agent) => {
//         try {
//             setChats(true)
            
//             const res = await fetch(`api/chat/chats/${ChatId}/getChat`)

//             const result = await res.json();

//             if (!res.ok) {
//                 return console.log(res.message)
//             }

//             setSingleData({ ...result, agent })

//         } catch (error) {
//             console.log(error.message)
//         }

//     }

    


//     return (
//         <div className='chat flex flex-col w-80 sm:w-[500px]  m-auto  justify-center p-3 bg-gray-700'>
//             {
//                 currentUser?.data?.role === 'user' ? <>
//                     <div className="">
//                         <h1 className='text-2xl text-white text-center'>Search Agent</h1>
//                     </div>
//                     <div className='flex gap-2 items-center justify-center mt-4 text-black'>
//                         <input className='max-w-48 p-3'
//                             type="text"
//                             value={agentId}
//                             onChange={handleChange}
//                             placeholder="Enter Agent ID"
//                         />
//                         <button onClick={handleStartChat} className='bg-white text-black p-3 rounded-lg' >Start Chat</button>

//                     </div>
//                 </>
//                     : ""
//             }


//             {allchats.length === 0 ? "NOT CHAT YET" : <div>
//                 <h1 className="text-center text-xl">Chat started </h1>
//                 {
//                     allchats.map((chat) => {
//                         // getting data 
//                         const user = chat?.userId?._id;
//                         const ChatId = chat._id
//                         const userData = chat.userId;
//                         const lastMessage = chat?.lastMessage?.content
//                         // console.log(lastMessage)
//                         const agent = chat?.agentId?._id;
//                         const agentData = chat.agentId;
//                         const Message = chat?.Message
//                         console.log("messages",Message)
//                         // console.log(userId === user)
//                         // console.log("messId",Message.userId)
//                         console.log(user === userId)

//                         return (
//                             <>

//                                 <div className="chat cursor-pointer w-full"  key={chat._id} >
//                                     {
//                                         userId === user ? <div className=" user-details flex flex-wrap items-center justify-evenly rounded-lg hover:scale-[0.9] hover:overflow-hidden duration-[1s] mt-3 text-white sm:p-3"
//                                             style={{ backgroundColor: chat.seenBy.includes(userId) ? "white" : "#fecd514e", color: chat.seenBy.includes(userId) ? "black" : "#fff" }} onClick={() => handleOpenChat(ChatId, agent)}>
//                                             <img className='w-[40px] h-[40px] rounded-full' src={agentData.avatar} alt={`${agentData.username}'s avatar`} />
//                                             <p>{agentData.username}</p>
//                                             <p>{lastMessage}</p>
//                                         </div> : ""
//                                     }
//                                     {
//                                         userId === agent ? <div className="w-full agent-details flex items-center justify-evenly rounded-lg hover:scale-110 hover:overflow-hidden mt-3 text-white gap-3 sm:p-3">
//                                             <img className='w-[40px] h-[40px] rounded-full' src={userData.avatar} alt={`${userData.username}'s avatar`} />
//                                             <p>{userData.username}</p>
//                                             <p>{lastMessage}</p>
//                                         </div> : ""
//                                     }


//                                 </div>

//                                 {chats && <div className="ChatBox mt-3 bg-white p-3 text-black">
//                                     <div className="top">
//                                         <div className="">
//                                             <div className="user bg-yellow-400 p-2 flex items-center justify-around">
//                                                 <img className='w-[40px] h-[40px] rounded-full' src={agentData.avatar} alt={`${agentData.username}'s avatar`} />
//                                                 <p>{agentData.username}</p>

//                                                 <div className="close cursor-pointer" onClick={() => setChats(null)}>X</div>
//                                             </div>
//                                         </div>
//                                     </div>
//                                     <div className="center border p-2 mt-3 h-[350px] overflow-scroll flex flex-col ">
//                                         {
                                            
//                                            Message.map((message) => <div key={message._id}  className="chatMessages" style={{alignSelf: user === userId ? 'flex-end' : "flex-start",textAlign:user === userId ? "right" : "left"}}>
//                                            <p className='text-[20px]'>{message.content}</p>
//                                            <span className='bg-yellow-400 text-white p-1 text-[12px] rounded-lg'>
//                                             {format(message.createdAt)}
//                                             </span>
//                                        </div>
                                            
//                                         )}
//                                     </div>
//                                     <div className="button flex justify-center flex-wrap items-center mt-2 ">
//                                         <textarea name="content" id="content" className=' border  border-yellow-400 rounded-lg focus:outline-none flex-1 h-full'></textarea>
//                                         <button className='bg-yellow-400 p-3 rounded-lg h-full' onClick={HandleMessages}>Send</button>
//                                     </div>
//                                 </div>
//                                 }

//                             </>
//                         );
//                     })
//                 }
//             </div>}
//         </div>
//     )
// }

// export default Chat

// {/* <div className="user-details">
//                 <img src={user.avatar} alt={`${user.username}'s avatar`} />
//                 <p>Username: username</p>
//                 <p>Email: {user.email}</p>
//             </div> */}
